[["Map",1,2,9,10],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.1.6","content-config-digest","6bcce6d548fd5ff2","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[]},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":\"shiki\",\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"responsiveImages\":false},\"legacy\":{\"collections\":false}}","notes",["Map",11,12,33,34,79,80,111,112],"blockchain",{"id":11,"data":13,"body":17,"filePath":18,"digest":19,"rendered":20},{"isDraft":14,"title":15,"updatedDate":16},true,"Blockchain",["Date","2023-05-27T00:00:00.000Z"],"# Blockchain\nA distributed ledger / database that uses cryptographic functions to very transactions/data sent across the network.\n\n\n[[Bitcoin]] is the first software to utilize blockchain technology. \n\n\nA blockchain should be\n- Open\n- Public\n- Global\n- Decentralized\n- Neutral\n- Censorship-resistant\n\n\n## Characteristics\n- P2P network\n- Messages representing state transitions\n\t- i.e. transactions\n- Set of consensus rules that governs what makes for a valid state transition\n- state machine that processes transactions according to conensus rules\n- a chain of cryptographically secured blocks consisting of verified and accepted state transitions\n- consensus algorithm that decentralizes control over the blockchain by incentivizing participants to cooperate in the enforcement of the consensus rules\n- Client diversity\n\t- Clients being an implementation of the software\n\n\n---","notes/blockchain.md","e5ee2b93c8f0ee9f",{"html":21,"metadata":22},"\u003Ch1 id=\"blockchain\">Blockchain\u003C/h1>\n\u003Cp>A distributed ledger / database that uses cryptographic functions to very transactions/data sent across the network.\u003C/p>\n\u003Cp>[[Bitcoin]] is the first software to utilize blockchain technology.\u003C/p>\n\u003Cp>A blockchain should be\u003C/p>\n\u003Cul>\n\u003Cli>Open\u003C/li>\n\u003Cli>Public\u003C/li>\n\u003Cli>Global\u003C/li>\n\u003Cli>Decentralized\u003C/li>\n\u003Cli>Neutral\u003C/li>\n\u003Cli>Censorship-resistant\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"characteristics\">Characteristics\u003C/h2>\n\u003Cul>\n\u003Cli>P2P network\u003C/li>\n\u003Cli>Messages representing state transitions\n\u003Cul>\n\u003Cli>i.e. transactions\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Set of consensus rules that governs what makes for a valid state transition\u003C/li>\n\u003Cli>state machine that processes transactions according to conensus rules\u003C/li>\n\u003Cli>a chain of cryptographically secured blocks consisting of verified and accepted state transitions\u003C/li>\n\u003Cli>consensus algorithm that decentralizes control over the blockchain by incentivizing participants to cooperate in the enforcement of the consensus rules\u003C/li>\n\u003Cli>Client diversity\n\u003Cul>\n\u003Cli>Clients being an implementation of the software\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Chr>",{"headings":23,"imagePaths":30,"frontmatter":31},[24,26],{"depth":25,"slug":11,"text":15},1,{"depth":27,"slug":28,"text":29},2,"characteristics","Characteristics",[],{"isDraft":14,"title":15,"updatedDate":32},["Date","2023-05-27T00:00:00.000Z"],"home-building",{"id":33,"data":35,"body":39,"filePath":40,"digest":41,"rendered":42},{"isDraft":14,"title":36,"publishDate":37,"updatedDate":38},"Home Building",["Date","2024-12-29T00:00:00.000Z"],["Date","2024-12-29T00:00:00.000Z"],"# Home Building\n\n## General\nZero entry front entrance\n36” wide doorways to accomodate wheelchairs\nFirst floor master\nIntegrated sound system throughout\n\n### Bathroom\nHeated floor\nRoman shower\nShower large enough for 2 at once\nSteam shower\nOff-set shower controls at entrance\nHuge bath (no jet bubbles, will cause issues)\nIn every bedroom, if feasible\n\n### Garage\nSide mount garage door openers\nZero entry\nEpoxy flooring\nDeeper garage to fit tools and larger vehicles\n120v and 240v garage\n3 car minimum\nTaller ceiling to lift car\nDrains in floor\n\n### Kitchen\nGiant walk-in pantry\nUnder counter ice machine\n2 fridges\nCharging drawer (hide cables)\nLower kitchen cabinets should be all pull outs or drawers\nPot filler over stove\nExtra 4\" depth on counters for appliances and large cutting board\nDrain pan under washing machine\n\n### Utilities\nConduit to every wall where a tv might go, with power\nDesign it to be over insulated. Whatever the standard R value for your city, double it. Or more. Make sure the house is sealed tight. We did ICF\nGet ERV installed to keep fresh air into the house to keep outside levels of CO2\nAll plumbing joints and valves should be copper or brass, and ball valve (no gates)\n\n### Office\nFloor outlets under desk\n\n### Outdoor\n\n### Basement\nmake the space under your garage part of the basement. Massive increase to usable space for effectively zero cost. Make sure it gets HVAC or it'll smell like a hockey locker room \n\n---\n\n## Miscellaneous\n\nHard flooring everywhere you can afford. Cover with rugs or carpet based rugs as desired\n\nDon't do zoned HVAC if you have space. Go with separate units. Will save more in the long run and make every inch of the house perfect \n\nPick different plumbing and light fixtures for each room. Increases value \n\nStone counters only.\n\nPut doors on pantry shelves to make them look better\n\nIf doing high end fridge freezers, two fridges in the kitchen, freezer in the pantry\n\nInsulated garage w/ mini split\n\nWiring for Christmas lights controlled with internal light switch.\n\nWiring for HD security cameras \n\nCopious lighting everywhere. No such thing as too much light. Can install lower power ones or dimmers to control.\n\nHyper secure doors, that lock in multiple spots near the top and bottom\n\nPrep work for pool stuff (gas, power, near where stuff would go)\n\nPrep work for outdoor kitchen (conduit, gas, etc)\n\nInsulation below grade under concrete \n\nTriple ceiling insulation \n\nBiggish laundry room\n\nSink and window in laundry\n\n10' basement 10-12' main level 9' upper levels \n\nCrown molding is hard to beat for the money\n\nAs big a master closet as you can handle\n\nComplex roof design (adds value) with simple water flow (saves hell)\n\nStairs should either be a grand feature of the design, or seem non existent. \n\nWater softener, tankless heaters w/ circulation pump, etc\n\nSolar at build is 25% less than after the fact\n\n400 amp service. Let's you charge 4 EVs at a time. Or 2 and dryer and stove. \n\nHot/cold spigot at top of driveway\n\nShared interior walls have rock wool insulation to deaden sound\n\nOver code foundation and framing\n\nCopper piping - prevents bacteria, strong, long-lasting, but can get eaten by acidic water over time. Or use PEX, no freezing issues, no leaks, maybe cheaper\n\nXL laundry room\n\nDimmers on all light switches with warm dim bulbs\n\nRadiant heat\n\n2 electrical panels\n\nElectrical and data drop every wall\n\nPet bathing area, hand held sprayer\n\nelectric plugs in bathroom for towel warmer\n\nSplit zone AC\n\nWarming drawer above oven\n\ntape all exterior plywood sheathing joints (insect and air intrusion)\n\npre-wire for solar\n\ndrain pans under washing machine.\n\nDedicated curcuits for appliances\n\nZero entry garage\n\nCentral VAC\n\nGreenhouse\n\ngas outdoor connection\n\nmud room entrance\n\nspend excessively on things that can’t be changed later.  For example, maximize insulation and energy efficiency rather then worrying about expensive counters.  Buy the best windows available rather than worrying about stainless steel appliances\n\nHidden ironing board in closet with outlet and storage for iron.","notes/home building.md","10053011b6c333fa",{"html":43,"metadata":44},"\u003Ch1 id=\"home-building\">Home Building\u003C/h1>\n\u003Ch2 id=\"general\">General\u003C/h2>\n\u003Cp>Zero entry front entrance\n36” wide doorways to accomodate wheelchairs\nFirst floor master\nIntegrated sound system throughout\u003C/p>\n\u003Ch3 id=\"bathroom\">Bathroom\u003C/h3>\n\u003Cp>Heated floor\nRoman shower\nShower large enough for 2 at once\nSteam shower\nOff-set shower controls at entrance\nHuge bath (no jet bubbles, will cause issues)\nIn every bedroom, if feasible\u003C/p>\n\u003Ch3 id=\"garage\">Garage\u003C/h3>\n\u003Cp>Side mount garage door openers\nZero entry\nEpoxy flooring\nDeeper garage to fit tools and larger vehicles\n120v and 240v garage\n3 car minimum\nTaller ceiling to lift car\nDrains in floor\u003C/p>\n\u003Ch3 id=\"kitchen\">Kitchen\u003C/h3>\n\u003Cp>Giant walk-in pantry\nUnder counter ice machine\n2 fridges\nCharging drawer (hide cables)\nLower kitchen cabinets should be all pull outs or drawers\nPot filler over stove\nExtra 4” depth on counters for appliances and large cutting board\nDrain pan under washing machine\u003C/p>\n\u003Ch3 id=\"utilities\">Utilities\u003C/h3>\n\u003Cp>Conduit to every wall where a tv might go, with power\nDesign it to be over insulated. Whatever the standard R value for your city, double it. Or more. Make sure the house is sealed tight. We did ICF\nGet ERV installed to keep fresh air into the house to keep outside levels of CO2\nAll plumbing joints and valves should be copper or brass, and ball valve (no gates)\u003C/p>\n\u003Ch3 id=\"office\">Office\u003C/h3>\n\u003Cp>Floor outlets under desk\u003C/p>\n\u003Ch3 id=\"outdoor\">Outdoor\u003C/h3>\n\u003Ch3 id=\"basement\">Basement\u003C/h3>\n\u003Cp>make the space under your garage part of the basement. Massive increase to usable space for effectively zero cost. Make sure it gets HVAC or it’ll smell like a hockey locker room\u003C/p>\n\u003Chr>\n\u003Ch2 id=\"miscellaneous\">Miscellaneous\u003C/h2>\n\u003Cp>Hard flooring everywhere you can afford. Cover with rugs or carpet based rugs as desired\u003C/p>\n\u003Cp>Don’t do zoned HVAC if you have space. Go with separate units. Will save more in the long run and make every inch of the house perfect\u003C/p>\n\u003Cp>Pick different plumbing and light fixtures for each room. Increases value\u003C/p>\n\u003Cp>Stone counters only.\u003C/p>\n\u003Cp>Put doors on pantry shelves to make them look better\u003C/p>\n\u003Cp>If doing high end fridge freezers, two fridges in the kitchen, freezer in the pantry\u003C/p>\n\u003Cp>Insulated garage w/ mini split\u003C/p>\n\u003Cp>Wiring for Christmas lights controlled with internal light switch.\u003C/p>\n\u003Cp>Wiring for HD security cameras\u003C/p>\n\u003Cp>Copious lighting everywhere. No such thing as too much light. Can install lower power ones or dimmers to control.\u003C/p>\n\u003Cp>Hyper secure doors, that lock in multiple spots near the top and bottom\u003C/p>\n\u003Cp>Prep work for pool stuff (gas, power, near where stuff would go)\u003C/p>\n\u003Cp>Prep work for outdoor kitchen (conduit, gas, etc)\u003C/p>\n\u003Cp>Insulation below grade under concrete\u003C/p>\n\u003Cp>Triple ceiling insulation\u003C/p>\n\u003Cp>Biggish laundry room\u003C/p>\n\u003Cp>Sink and window in laundry\u003C/p>\n\u003Cp>10’ basement 10-12’ main level 9’ upper levels\u003C/p>\n\u003Cp>Crown molding is hard to beat for the money\u003C/p>\n\u003Cp>As big a master closet as you can handle\u003C/p>\n\u003Cp>Complex roof design (adds value) with simple water flow (saves hell)\u003C/p>\n\u003Cp>Stairs should either be a grand feature of the design, or seem non existent.\u003C/p>\n\u003Cp>Water softener, tankless heaters w/ circulation pump, etc\u003C/p>\n\u003Cp>Solar at build is 25% less than after the fact\u003C/p>\n\u003Cp>400 amp service. Let’s you charge 4 EVs at a time. Or 2 and dryer and stove.\u003C/p>\n\u003Cp>Hot/cold spigot at top of driveway\u003C/p>\n\u003Cp>Shared interior walls have rock wool insulation to deaden sound\u003C/p>\n\u003Cp>Over code foundation and framing\u003C/p>\n\u003Cp>Copper piping - prevents bacteria, strong, long-lasting, but can get eaten by acidic water over time. Or use PEX, no freezing issues, no leaks, maybe cheaper\u003C/p>\n\u003Cp>XL laundry room\u003C/p>\n\u003Cp>Dimmers on all light switches with warm dim bulbs\u003C/p>\n\u003Cp>Radiant heat\u003C/p>\n\u003Cp>2 electrical panels\u003C/p>\n\u003Cp>Electrical and data drop every wall\u003C/p>\n\u003Cp>Pet bathing area, hand held sprayer\u003C/p>\n\u003Cp>electric plugs in bathroom for towel warmer\u003C/p>\n\u003Cp>Split zone AC\u003C/p>\n\u003Cp>Warming drawer above oven\u003C/p>\n\u003Cp>tape all exterior plywood sheathing joints (insect and air intrusion)\u003C/p>\n\u003Cp>pre-wire for solar\u003C/p>\n\u003Cp>drain pans under washing machine.\u003C/p>\n\u003Cp>Dedicated curcuits for appliances\u003C/p>\n\u003Cp>Zero entry garage\u003C/p>\n\u003Cp>Central VAC\u003C/p>\n\u003Cp>Greenhouse\u003C/p>\n\u003Cp>gas outdoor connection\u003C/p>\n\u003Cp>mud room entrance\u003C/p>\n\u003Cp>spend excessively on things that can’t be changed later.  For example, maximize insulation and energy efficiency rather then worrying about expensive counters.  Buy the best windows available rather than worrying about stainless steel appliances\u003C/p>\n\u003Cp>Hidden ironing board in closet with outlet and storage for iron.\u003C/p>",{"headings":45,"imagePaths":75,"frontmatter":76},[46,47,50,54,57,60,63,66,69,72],{"depth":25,"slug":33,"text":36},{"depth":27,"slug":48,"text":49},"general","General",{"depth":51,"slug":52,"text":53},3,"bathroom","Bathroom",{"depth":51,"slug":55,"text":56},"garage","Garage",{"depth":51,"slug":58,"text":59},"kitchen","Kitchen",{"depth":51,"slug":61,"text":62},"utilities","Utilities",{"depth":51,"slug":64,"text":65},"office","Office",{"depth":51,"slug":67,"text":68},"outdoor","Outdoor",{"depth":51,"slug":70,"text":71},"basement","Basement",{"depth":27,"slug":73,"text":74},"miscellaneous","Miscellaneous",[],{"isDraft":14,"title":36,"publishDate":77,"updatedDate":78},["Date","2024-12-29T00:00:00.000Z"],["Date","2024-12-29T00:00:00.000Z"],"web-development",{"id":79,"data":81,"body":84,"filePath":85,"digest":86,"rendered":87},{"isDraft":14,"title":82,"updatedDate":83},"Web Development",["Date","2023-05-27T00:00:00.000Z"],"# Web Development\nConsiderations:\n- UI - how users consume and interact w/ your application\n- Routing - how users navigate\n- Data Fetching - where your data lives nad how to get it\n- Rendering - when and hwere you render static or dynamic content\n- Integrations - 3rd party services and how to connect them\n- Performance - how to optimize\n- Scalability - how your app adapts to growth\n- Dev Experience - exp building and maintaining your app\n\n\n## Client and Server\nClient refers to the browser on a user's device \nServer refers to the computer storing application code and responds to client requests\n\n\n## Rendering\n#### Server-side\nFetching of external data and transformation of React components into HTML happens before result is sent to client. HTML is generated once at build time and stored in a [[CDN]] and re-used for each request.\n\n\n#### Static site generation\nFetching of external data and transformation of React components into HTML happens before result is sent to client\n\n\n#### Client-side rendering\nClient's browser receives empty HTML shell from server along with JavaScript instructions to construct the UI.\n\n\n\n\n📝 **Web Development in 2020**\n\n\nNotes from Traversy Media’s Video [https://www.youtube.com/watch?v=0pThnRneDjw&t=972s](https://www.youtube.com/watch?v=0pThnRneDjw&t=972s)\n\n\n**Frontend**\n\n\n  \n\n\n**Responsive Design**\n\n\n-   Viewport\n-   Media queries\n-   Fluid widths\n-   REM over px\n-   Mobile first\n\n\n-   Create mobile media queries first\n\n\n  \n\n\n**Custom Reusable CSS Components**\n\n\nCreate your own modular, reusable CSS components. Makes CSS more efficient and functional.\n\n\n-   Variables\n-   Nesting\n-   Conditionals\n\n\n  \n\n\n**CSS Frameworks**\n\n\nDownward trend, but still relevant. Good for developers who struggle at design\n\n\n-   Bootstrap\n-   Tailwind CSS\n\n\n-   Upward trend\n-   Set of utility classes\n-   Highly customizable\n\n\n-   Materialize\n-   Bulma\n\n\n  \n\n\n**Vanilla JS**\n\n\nMakes pages dynamic\n\n\n-   Fundamentals\n-   DOM\n-   JSON (JS Object Notation)\n-   Fetch API (Request / Response / Ajax)\n-   Modern JS\n\n\n  \n\n\n**Basic Deployment**\n\n\nGet project to web server\n\n\n-   Domain Registration\n-   Managed Hosting (Hostgator, Bluehost, etc.)\n-   Static Hosting (Netlify, Github Pages)\n-   SSL Certificate \n\n\n  \n\n\n**Front-End Framework**\n\n\nAllow powerful single page applications with organized and interactive UIs. Great for teams.\n\n\n-   React\n\n\n-   Most popular\n\n\n-   Vue\n\n\n-   Gaining traction\n\n\n-   Angular\n\n\n-   Used more in enterprise\n\n\n  \n\n\n**Svelte**\n\n\nJS compiler that produces vanilla JS and builds UI easily.\n\n\n-   Write less code\n-   No virtual DOM\n-   Very fast\n\n\n  \n\n\n**State Management**\n\n\nApp level state. Downward trend.\n\n\n-   React - Redux\n\n\n-   Context API with hooks on upward trend\n\n\n-   Vue - Vuex\n-   Angular - NGRX, Services\n-   Apollo Client\n\n\n  \n\n\n**Server Side Rendering**\n\n\nRender React and Vue on server as oppose to a client side SPA. NEXT for React and NUXT for Vue.\n\n\n-   Better SEO\n-   File system routing\n-   Automatic code splitting\n-   Static exploring\n-   CSS-in-JS\n\n\n  \n\n\n**Static Site Generators**\n\n\nGatsby (React) and Gridsome (Vue). Generate static web pages.\n\n\n-   Better SEO\n-   File system routing\n-   Data fetching from local files, during build time\n-   Plugin system\n-   GraphQL for data\n\n\n  \n\n\n**TypeScript**\n\n\nSuperset of JS allowing for optional static typing and more.\n\n\n-   Static typing\n-   Tooling support with IntelliSense\n-   Modules, decorators, classes\n-   Compiles into clean JS code\n-   Built into Angular\n\n\n  \n\n\n**Backend**\n\n\n  \n\n\n**Server-side language and framework**\n\n\n-   Node.js\n\n\n-   Express\n-   Feathers.js\n-   Next.js\n\n\n-   PHP\n\n\n-   Laravel\n\n\n-   Python\n\n\n-   Django, Flask\n\n\n-   C#\n\n\n-   [ASP.NET](http://ASP.NET) MVC\n\n\n-   Java\n\n\n-   Spring MVC, Grails\n\n\n-   Ruby\n\n\n-   Ruby on Rails\n-   Sinatra\n\n\n-   Go\n\n\n-   Revel\n\n\n  \n\n\n**Databases**\n\n\n-   Relational (most popular)\n\n\n-   PostgreSQL (upward trend)\n-   MySQL\n-   MS SQL\n\n\n-   NoSQL (faster, more freedom)\n\n\n-   MongoDB (most popular)\n\n\n-   Mongo Atlas for cloud\n\n\n-   RethinkDB\n-   CouchDB\n\n\n-   Cloud - \n\n\n-   Firebase\n\n\n-   For small - medium projects\n\n\n-   Azure Cloud\n-   AWS\n\n\n-   Lightweight & Cache\n\n\n-   Redis\n-   SQLlite\n-   NeDB\n\n\n  \n\n\n**GraphQL**\n\n\n-   Query language for your API\n-   Single endpoint \n-   Simple syntax, similar to JSON\n-   Fairly easy to implement\n-   Apollo is a client to interact with the GraphQL server\n\n\n  \n\n\n**Content Management**\n\n\nA CMS is used to add content to your website / application. Good for clients to update without programming knowledge.\n\n\n  \n\n\n-   Traditional\n\n\n-   Wordpress\n-   Drupal\n-   Keystone\n-   Enduro\n\n\n-   Headless - just the data\n\n\n-   Contentful\n-   [Prismic.io](http://Prismic.io)\n-   Sanity\n-   Strapi\n\n\n  \n\n\n**Deployment and DevOps**\n\n\nUnderstand how to create / manage environments and deploy to the web\n\n\n-   SSH\n-   Web Server Environment\n\n\n-   NGINX\n-   Apache\n\n\n-   App Hosting\n\n\n-   Linode\n-   Heroku\n-   AWS\n\n\n-   Large-scale\n\n\n-   Azure\n\n\n-   Large-scale\n\n\n-   Now\n\n\n-   Virtualization\n\n\n-   Docker\n\n\n-   Have same environment on multiple platforms\n\n\n-   Vagrant\n\n\n-   Testing\n\n\n-   Unit\n-   Functional\n-   Integration\n\n\n-   Load balancing, monitoring, security\n\n\n-   Usually done by a separate DevOps professional\n\n\n  \n\n\n**Mobile Development**\n\n\n-   Flutter\n\n\n-   Native mobile apps SDK from Google using Dart\n\n\n-   React Native\n\n\n-   Native mobile apps using React\n\n\n-   NativeScript \n\n\n-   Native mobile apps with JS, TS, Angular, or Cue\n\n\n-   Ionic\n\n\n-   Hybrid mobile apps with JS\n\n\n-   Xamarin\n\n\n-   Native mobile apps with C#\n\n\n  \n\n\n**PWA: Progressive Web Apps**\n\n\nRegular web apps that have a native feel\n\n\n-   Look great on all screen sizes\n-   Offline content with service workers\n-   Installable\n-   Splash screen\n-   Must be HTTPS\n-   Reliable, fast, and engaging\n\n\n  \n\n\n**Desktop Apps with Electron**\n\n\nAllows cross-platform app with JS\n\n\n-   Uses Node.js & Chromium\n-   High data security\n-   High performance\n-   Accessibility\n-   VSCode, Atom, Postman, Discord\n\n\n  \n\n\n**JAMstack**\n\n\n“JavaScript, APIs & Markup” is a modern web development architecture based on client-side JavaScript, reusable APIs, and prebuilt Markup. Upward trend.\n\n\n-   No restriction on framework or library\n-   Websites are served as static html files generated from source files, such as markdown using a static site generator like Gatsby\n-   High performance, generated at deploy time\n-   Cheaper and easy to scale\n-   Easy to host (Netlify)\n\n\n  \n\n\n**Serverless Architecture**\n\n\nServer operations without actually needing your own server\n\n\n-   “Backend” or “Functions” as a service (FaaS)\n-   Reduce complexity and costs\n-   Less infrastructure to manage\n-   AWS Lambda & Netlify\n\n\n  \n\n\n**API-First Design**\n\n\nWith more and more IoT expect to see api-focused design\n\n\n-   Traditionally we start with UI and then backend with a strict connection to the web app\n-   With API-first design, you start with the appropriate APIs and then build products on top of it\n\n\n  \n\n\n**Machine Learning / AI & the Web**\n\n\nGrowing in all areas of tech and can be useful in web apps / services\n\n\n-   Alternative to conventional data mining\n-   Remove security threats\n-   Machine learning APIs\n-   Producing content\n-   Study user behavior\n-   Python is king\n\n\n  \n\n\n**Speech Recognition**\n\n\nMajor trend. \n\n\n-   HTML5 Web Speech API\n-   Google Speech-To-Text\n-   Dialog Flow\n\n\n  \n\n\n**Web Assembly**\n\n\nLow-level bytemode run in browser\n\n\n-   Generated by C, C++, and Rust\n-   Much faster than JS\n-   Not replacement for JS, works alongside it\n-   Next level video games, tools in browser","notes/web development.md","1d3f6ef1e46e53b5",{"html":88,"metadata":89},"\u003Ch1 id=\"web-development\">Web Development\u003C/h1>\n\u003Cp>Considerations:\u003C/p>\n\u003Cul>\n\u003Cli>UI - how users consume and interact w/ your application\u003C/li>\n\u003Cli>Routing - how users navigate\u003C/li>\n\u003Cli>Data Fetching - where your data lives nad how to get it\u003C/li>\n\u003Cli>Rendering - when and hwere you render static or dynamic content\u003C/li>\n\u003Cli>Integrations - 3rd party services and how to connect them\u003C/li>\n\u003Cli>Performance - how to optimize\u003C/li>\n\u003Cli>Scalability - how your app adapts to growth\u003C/li>\n\u003Cli>Dev Experience - exp building and maintaining your app\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"client-and-server\">Client and Server\u003C/h2>\n\u003Cp>Client refers to the browser on a user’s device\nServer refers to the computer storing application code and responds to client requests\u003C/p>\n\u003Ch2 id=\"rendering\">Rendering\u003C/h2>\n\u003Ch4 id=\"server-side\">Server-side\u003C/h4>\n\u003Cp>Fetching of external data and transformation of React components into HTML happens before result is sent to client. HTML is generated once at build time and stored in a [[CDN]] and re-used for each request.\u003C/p>\n\u003Ch4 id=\"static-site-generation\">Static site generation\u003C/h4>\n\u003Cp>Fetching of external data and transformation of React components into HTML happens before result is sent to client\u003C/p>\n\u003Ch4 id=\"client-side-rendering\">Client-side rendering\u003C/h4>\n\u003Cp>Client’s browser receives empty HTML shell from server along with JavaScript instructions to construct the UI.\u003C/p>\n\u003Cp>📝 \u003Cstrong>Web Development in 2020\u003C/strong>\u003C/p>\n\u003Cp>Notes from Traversy Media’s Video \u003Ca href=\"https://www.youtube.com/watch?v=0pThnRneDjw&#x26;t=972s\">https://www.youtube.com/watch?v=0pThnRneDjw&#x26;t=972s\u003C/a>\u003C/p>\n\u003Cp>\u003Cstrong>Frontend\u003C/strong>\u003C/p>\n\u003Cp>\u003Cstrong>Responsive Design\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>Viewport\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Media queries\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Fluid widths\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>REM over px\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Mobile first\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Create mobile media queries first\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cstrong>Custom Reusable CSS Components\u003C/strong>\u003C/p>\n\u003Cp>Create your own modular, reusable CSS components. Makes CSS more efficient and functional.\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>Variables\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Nesting\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Conditionals\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cstrong>CSS Frameworks\u003C/strong>\u003C/p>\n\u003Cp>Downward trend, but still relevant. Good for developers who struggle at design\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>Bootstrap\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Tailwind CSS\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Upward trend\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Set of utility classes\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Highly customizable\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Materialize\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Bulma\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cstrong>Vanilla JS\u003C/strong>\u003C/p>\n\u003Cp>Makes pages dynamic\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>Fundamentals\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>DOM\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>JSON (JS Object Notation)\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Fetch API (Request / Response / Ajax)\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Modern JS\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cstrong>Basic Deployment\u003C/strong>\u003C/p>\n\u003Cp>Get project to web server\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>Domain Registration\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Managed Hosting (Hostgator, Bluehost, etc.)\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Static Hosting (Netlify, Github Pages)\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>SSL Certificate \u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cstrong>Front-End Framework\u003C/strong>\u003C/p>\n\u003Cp>Allow powerful single page applications with organized and interactive UIs. Great for teams.\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>React\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Most popular\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Vue\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Gaining traction\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Angular\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Used more in enterprise\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cstrong>Svelte\u003C/strong>\u003C/p>\n\u003Cp>JS compiler that produces vanilla JS and builds UI easily.\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>Write less code\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>No virtual DOM\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Very fast\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cstrong>State Management\u003C/strong>\u003C/p>\n\u003Cp>App level state. Downward trend.\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>React - Redux\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Context API with hooks on upward trend\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Vue - Vuex\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Angular - NGRX, Services\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Apollo Client\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cstrong>Server Side Rendering\u003C/strong>\u003C/p>\n\u003Cp>Render React and Vue on server as oppose to a client side SPA. NEXT for React and NUXT for Vue.\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>Better SEO\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>File system routing\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Automatic code splitting\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Static exploring\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>CSS-in-JS\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cstrong>Static Site Generators\u003C/strong>\u003C/p>\n\u003Cp>Gatsby (React) and Gridsome (Vue). Generate static web pages.\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>Better SEO\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>File system routing\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Data fetching from local files, during build time\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Plugin system\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>GraphQL for data\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cstrong>TypeScript\u003C/strong>\u003C/p>\n\u003Cp>Superset of JS allowing for optional static typing and more.\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>Static typing\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Tooling support with IntelliSense\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Modules, decorators, classes\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Compiles into clean JS code\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Built into Angular\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cstrong>Backend\u003C/strong>\u003C/p>\n\u003Cp>\u003Cstrong>Server-side language and framework\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>Node.js\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Express\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Feathers.js\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Next.js\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>PHP\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Laravel\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Python\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Django, Flask\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>C#\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Ca href=\"http://ASP.NET\">ASP.NET\u003C/a> MVC\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Java\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Spring MVC, Grails\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Ruby\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Ruby on Rails\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Sinatra\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Go\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Revel\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cstrong>Databases\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>Relational (most popular)\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>PostgreSQL (upward trend)\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>MySQL\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>MS SQL\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>NoSQL (faster, more freedom)\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>MongoDB (most popular)\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Mongo Atlas for cloud\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>RethinkDB\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>CouchDB\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Cloud - \u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Firebase\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>For small - medium projects\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Azure Cloud\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>AWS\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Lightweight &#x26; Cache\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Redis\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>SQLlite\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>NeDB\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cstrong>GraphQL\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>Query language for your API\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Single endpoint \u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Simple syntax, similar to JSON\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Fairly easy to implement\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Apollo is a client to interact with the GraphQL server\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cstrong>Content Management\u003C/strong>\u003C/p>\n\u003Cp>A CMS is used to add content to your website / application. Good for clients to update without programming knowledge.\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>Traditional\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Wordpress\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Drupal\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Keystone\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Enduro\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Headless - just the data\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Contentful\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Ca href=\"http://Prismic.io\">Prismic.io\u003C/a>\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Sanity\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Strapi\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cstrong>Deployment and DevOps\u003C/strong>\u003C/p>\n\u003Cp>Understand how to create / manage environments and deploy to the web\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>SSH\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Web Server Environment\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>NGINX\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Apache\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>App Hosting\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Linode\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Heroku\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>AWS\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Large-scale\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Azure\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Large-scale\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Now\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Virtualization\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Docker\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Have same environment on multiple platforms\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Vagrant\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Testing\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Unit\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Functional\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Integration\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Load balancing, monitoring, security\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Usually done by a separate DevOps professional\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cstrong>Mobile Development\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>Flutter\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Native mobile apps SDK from Google using Dart\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>React Native\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Native mobile apps using React\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>NativeScript \u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Native mobile apps with JS, TS, Angular, or Cue\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Ionic\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Hybrid mobile apps with JS\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Xamarin\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Native mobile apps with C#\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cstrong>PWA: Progressive Web Apps\u003C/strong>\u003C/p>\n\u003Cp>Regular web apps that have a native feel\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>Look great on all screen sizes\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Offline content with service workers\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Installable\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Splash screen\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Must be HTTPS\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Reliable, fast, and engaging\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cstrong>Desktop Apps with Electron\u003C/strong>\u003C/p>\n\u003Cp>Allows cross-platform app with JS\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>Uses Node.js &#x26; Chromium\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>High data security\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>High performance\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Accessibility\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>VSCode, Atom, Postman, Discord\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cstrong>JAMstack\u003C/strong>\u003C/p>\n\u003Cp>“JavaScript, APIs &#x26; Markup” is a modern web development architecture based on client-side JavaScript, reusable APIs, and prebuilt Markup. Upward trend.\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>No restriction on framework or library\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Websites are served as static html files generated from source files, such as markdown using a static site generator like Gatsby\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>High performance, generated at deploy time\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Cheaper and easy to scale\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Easy to host (Netlify)\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cstrong>Serverless Architecture\u003C/strong>\u003C/p>\n\u003Cp>Server operations without actually needing your own server\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>“Backend” or “Functions” as a service (FaaS)\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Reduce complexity and costs\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Less infrastructure to manage\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>AWS Lambda &#x26; Netlify\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cstrong>API-First Design\u003C/strong>\u003C/p>\n\u003Cp>With more and more IoT expect to see api-focused design\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>Traditionally we start with UI and then backend with a strict connection to the web app\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>With API-first design, you start with the appropriate APIs and then build products on top of it\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cstrong>Machine Learning / AI &#x26; the Web\u003C/strong>\u003C/p>\n\u003Cp>Growing in all areas of tech and can be useful in web apps / services\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>Alternative to conventional data mining\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Remove security threats\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Machine learning APIs\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Producing content\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Study user behavior\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Python is king\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cstrong>Speech Recognition\u003C/strong>\u003C/p>\n\u003Cp>Major trend. \u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>HTML5 Web Speech API\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Google Speech-To-Text\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Dialog Flow\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cstrong>Web Assembly\u003C/strong>\u003C/p>\n\u003Cp>Low-level bytemode run in browser\u003C/p>\n\u003Cul>\n\u003Cli>Generated by C, C++, and Rust\u003C/li>\n\u003Cli>Much faster than JS\u003C/li>\n\u003Cli>Not replacement for JS, works alongside it\u003C/li>\n\u003Cli>Next level video games, tools in browser\u003C/li>\n\u003C/ul>",{"headings":90,"imagePaths":108,"frontmatter":109},[91,92,95,98,102,105],{"depth":25,"slug":79,"text":82},{"depth":27,"slug":93,"text":94},"client-and-server","Client and Server",{"depth":27,"slug":96,"text":97},"rendering","Rendering",{"depth":99,"slug":100,"text":101},4,"server-side","Server-side",{"depth":99,"slug":103,"text":104},"static-site-generation","Static site generation",{"depth":99,"slug":106,"text":107},"client-side-rendering","Client-side rendering",[],{"isDraft":14,"title":82,"updatedDate":110},["Date","2023-05-27T00:00:00.000Z"],"nextjs",{"id":111,"data":113,"body":116,"filePath":117,"digest":118,"rendered":119},{"isDraft":14,"title":114,"updatedDate":115},"Next.js",["Date","2023-05-27T00:00:00.000Z"],"# Next.js\n[[React]] framework that gives you building blocks to create web applications. It handles tooling and configuration needed for React and provides additional structure, features, and optimizations.\n\n\n- automatically minifies [[JavaScript|JS]] and [[CSS]] files\n- built-in support for code splitting\n\t- \n\n\n## Creating a Project\n`npx create-next-app@latest --use-npm`\n\n\n## Next.js Compiler\nA [[compiler]] written in [[Rust]] and SWC. \n\n\n## Rendering\nNext.js pre-renders every page by default i.e. HTML is generated in advance on a server. \nYou can choose the most appropriate rendering method on a page-by-page basis.\n\n\n#### Static generation\nYou can statically generate pages using `getStaticProps`. \n\n\n## Commands\n`next dev` start Next.js in dev mode\n`next build` builds applications for prod. use\n`next start` start a Next.js production server\n`next lint` set up Next.js built-in ESLint configuration","notes/nextjs.md","b9877948539c0940",{"html":120,"metadata":121},"\u003Ch1 id=\"nextjs\">Next.js\u003C/h1>\n\u003Cp>[[React]] framework that gives you building blocks to create web applications. It handles tooling and configuration needed for React and provides additional structure, features, and optimizations.\u003C/p>\n\u003Cul>\n\u003Cli>automatically minifies [[JavaScript|JS]] and [[CSS]] files\u003C/li>\n\u003Cli>\n\u003Ch2 id=\"built-in-support-for-code-splitting\">built-in support for code splitting\u003C/h2>\n\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"creating-a-project\">Creating a Project\u003C/h2>\n\u003Cp>\u003Ccode>npx create-next-app@latest --use-npm\u003C/code>\u003C/p>\n\u003Ch2 id=\"nextjs-compiler\">Next.js Compiler\u003C/h2>\n\u003Cp>A [[compiler]] written in [[Rust]] and SWC.\u003C/p>\n\u003Ch2 id=\"rendering\">Rendering\u003C/h2>\n\u003Cp>Next.js pre-renders every page by default i.e. HTML is generated in advance on a server.\nYou can choose the most appropriate rendering method on a page-by-page basis.\u003C/p>\n\u003Ch4 id=\"static-generation\">Static generation\u003C/h4>\n\u003Cp>You can statically generate pages using \u003Ccode>getStaticProps\u003C/code>.\u003C/p>\n\u003Ch2 id=\"commands\">Commands\u003C/h2>\n\u003Cp>\u003Ccode>next dev\u003C/code> start Next.js in dev mode\n\u003Ccode>next build\u003C/code> builds applications for prod. use\n\u003Ccode>next start\u003C/code> start a Next.js production server\n\u003Ccode>next lint\u003C/code> set up Next.js built-in ESLint configuration\u003C/p>",{"headings":122,"imagePaths":140,"frontmatter":141},[123,124,127,130,133,134,137],{"depth":25,"slug":111,"text":114},{"depth":27,"slug":125,"text":126},"built-in-support-for-code-splitting","built-in support for code splitting",{"depth":27,"slug":128,"text":129},"creating-a-project","Creating a Project",{"depth":27,"slug":131,"text":132},"nextjs-compiler","Next.js Compiler",{"depth":27,"slug":96,"text":97},{"depth":99,"slug":135,"text":136},"static-generation","Static generation",{"depth":27,"slug":138,"text":139},"commands","Commands",[],{"isDraft":14,"title":114,"updatedDate":142},["Date","2023-05-27T00:00:00.000Z"]]